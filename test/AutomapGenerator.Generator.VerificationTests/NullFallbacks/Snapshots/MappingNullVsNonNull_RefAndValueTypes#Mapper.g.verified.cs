//HintName: Mapper.g.cs
// <auto-generated/>
namespace AutomapGenerator
{
    [global::System.CodeDom.Compiler.GeneratedCode("AutomapGenerator.SourceGenerator.MapperGenerator", "1.0.0.0")]
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public class Mapper : IMapper
    {
        public TDestination Map<TDestination>(object source)
            where TDestination : new() => Map<TDestination>(source, new TDestination());
        public TDestination Map<TDestination>(object source, TDestination destination)
        {
            switch (source, destination)
            {
                case (AutomapGenerator.Generator.VerificationTests.NullFallbacks.Sources.SourceWithNullableValueTypes s, AutomapGenerator.Generator.VerificationTests.NullFallbacks.Sources.DestinationForNullableValueTypes d):
                    MapInternal(s, d);
                    break;
                default:
                    throw new MappingException($"Mapping from {source.GetType().Name} to {typeof(TDestination).Name} has not been configured.");
            }

            return destination;
        }

        private void MapInternal(AutomapGenerator.Generator.VerificationTests.NullFallbacks.Sources.SourceWithNullableValueTypes source, AutomapGenerator.Generator.VerificationTests.NullFallbacks.Sources.DestinationForNullableValueTypes destination)
        {
            destination.NonNullableRefSimpleMap = source.NonNullableRefType;
            destination.NonNullableRefMapWithStaticFallback = source.NullableRefType ?? "test";
            destination.NonNullableRefMapWithPropertyFallback = source.NullableRefType ?? source.NonNullableRefType;
            destination.NullableRefSimpleMap = source.NullableRefType;
            destination.NullableRefMapWithStaticFallback = source.NullableRefType ?? "test";
            destination.NullableRefMapWithPropertyFallback = source.NullableRefType ?? source.NonNullableRefType;
            destination.NullableRefType = source.NullableRefType ?? "test";
            destination.SourceWithNullableValueTypesNullableRefType = source.NullableRefType ?? source.NonNullableRefType;
            destination.NonNullableValueSimpleMap = source.NonNullableValueType;
            destination.NonNullableValueMapWithStaticFallback = source.NullableValueType ?? 99;
            destination.NonNullableValueMapWithPropertyFallback = source.NullableValueType ?? source.NonNullableValueType;
            destination.NullableValueSimpleMap = source.NullableValueType;
            destination.NullableValueMapWithStaticFallback = source.NullableValueType ?? 99;
            destination.NullableValueMapWithPropertyFallback = source.NullableValueType ?? source.NonNullableValueType;
            destination.NullableValueType = source.NullableValueType ?? 99;
            destination.SourceWithNullableValueTypesNullableValueType = source.NullableValueType ?? source.NonNullableValueType;
        }

        public global::System.Linq.IQueryable<TDestination> ProjectTo<TDestination>(global::System.Linq.IQueryable<object> source)
            where TDestination : new()
        {
            var destInstance = new TDestination();
            switch (source, destInstance)
            {
                case (global::System.Linq.IQueryable<AutomapGenerator.Generator.VerificationTests.NullFallbacks.Sources.SourceWithNullableValueTypes> s, AutomapGenerator.Generator.VerificationTests.NullFallbacks.Sources.DestinationForNullableValueTypes d):
                    return global::System.Linq.Queryable.Cast<TDestination>(ProjectInternal(s, d));
                default:
                    throw new MappingException($"Mapping from {source.GetType().Name} to {typeof(TDestination).Name} has not been configured.");
            }
        }

        private global::System.Linq.IQueryable<AutomapGenerator.Generator.VerificationTests.NullFallbacks.Sources.DestinationForNullableValueTypes> ProjectInternal(global::System.Linq.IQueryable<AutomapGenerator.Generator.VerificationTests.NullFallbacks.Sources.SourceWithNullableValueTypes> sourceQueryable, AutomapGenerator.Generator.VerificationTests.NullFallbacks.Sources.DestinationForNullableValueTypes _)
        {
            return global::System.Linq.Queryable.Select(sourceQueryable, source => new AutomapGenerator.Generator.VerificationTests.NullFallbacks.Sources.DestinationForNullableValueTypes()
            {
                NonNullableRefSimpleMap = source.NonNullableRefType,
                NonNullableRefMapWithStaticFallback = source.NullableRefType != null ? source.NullableRefType : "test",
                NonNullableRefMapWithPropertyFallback = source.NullableRefType != null ? source.NullableRefType : source.NonNullableRefType,
                NullableRefSimpleMap = source.NullableRefType,
                NullableRefMapWithStaticFallback = source.NullableRefType != null ? source.NullableRefType : "test",
                NullableRefMapWithPropertyFallback = source.NullableRefType != null ? source.NullableRefType : source.NonNullableRefType,
                NullableRefType = source.NullableRefType != null ? source.NullableRefType : "test",
                SourceWithNullableValueTypesNullableRefType = source.NullableRefType != null ? source.NullableRefType : source.NonNullableRefType,
                NonNullableValueSimpleMap = source.NonNullableValueType,
                NonNullableValueMapWithStaticFallback = source.NullableValueType != null ? source.NullableValueType : 99,
                NonNullableValueMapWithPropertyFallback = source.NullableValueType != null ? source.NullableValueType : source.NonNullableValueType,
                NullableValueSimpleMap = source.NullableValueType,
                NullableValueMapWithStaticFallback = source.NullableValueType != null ? source.NullableValueType : 99,
                NullableValueMapWithPropertyFallback = source.NullableValueType != null ? source.NullableValueType : source.NonNullableValueType,
                NullableValueType = source.NullableValueType != null ? source.NullableValueType : 99,
                SourceWithNullableValueTypesNullableValueType = source.NullableValueType != null ? source.NullableValueType : source.NonNullableValueType
            });
        }
    }
}
