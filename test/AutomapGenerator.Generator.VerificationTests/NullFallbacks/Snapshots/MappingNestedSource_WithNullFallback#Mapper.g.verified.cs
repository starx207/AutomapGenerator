//HintName: Mapper.g.cs
// <auto-generated/>
namespace AutomapGenerator
{
    [global::System.CodeDom.Compiler.GeneratedCode("AutomapGenerator.SourceGenerator.MapperGenerator", "1.0.0.0")]
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public class Mapper : IMapper
    {
        public TDestination Map<TDestination>(object source)
            where TDestination : new() => Map<TDestination>(source, new TDestination());
        public TDestination Map<TDestination>(object source, TDestination destination)
        {
            switch (source, destination)
            {
                case (AutomapGenerator.Generator.VerificationTests.NullFallbacks.Sources.SourceObj s, AutomapGenerator.Generator.VerificationTests.NullFallbacks.Sources.DestinationObjFromNested d):
                    d.ChildObjValue = s.ChildObj?.Value ?? "something else";
                    d.NonNullString = s.ChildObj?.Value ?? "my default";
                    d.ChildObjOtherValue = s.ChildObj?.OtherValue ?? s.OtherNullableString;
                    d.NullableString = s.ChildObj?.OtherValue ?? s.ChildObj?.Value;
                    break;
                default:
                    throw new MappingException($"Mapping from {source.GetType().Name} to {typeof(TDestination).Name} has not been configured.");
            }

            return destination;
        }

        public global::System.Linq.IQueryable<TDestination> ProjectTo<TDestination>(global::System.Linq.IQueryable<object> source)
            where TDestination : new()
        {
            var destInstance = new TDestination();
            switch (source, destInstance)
            {
                case (global::System.Linq.IQueryable<AutomapGenerator.Generator.VerificationTests.NullFallbacks.Sources.SourceObj> s, AutomapGenerator.Generator.VerificationTests.NullFallbacks.Sources.DestinationObjFromNested):
                    return global::System.Linq.Queryable.Cast<TDestination>(global::System.Linq.Queryable.Select(s, src => new AutomapGenerator.Generator.VerificationTests.NullFallbacks.Sources.DestinationObjFromNested()
                    {
                        ChildObjValue = src.ChildObj != null && src.ChildObj.Value != null ? src.ChildObj.Value : "something else",
                        NonNullString = src.ChildObj != null && src.ChildObj.Value != null ? src.ChildObj.Value : "my default",
                        ChildObjOtherValue = src.ChildObj != null && src.ChildObj.OtherValue != null ? src.ChildObj.OtherValue : src.OtherNullableString,
                        NullableString = src.ChildObj != null && src.ChildObj.OtherValue != null ? src.ChildObj.OtherValue : (src.ChildObj != null ? src.ChildObj.Value : null)
                    }));
                default:
                    throw new MappingException($"Mapping from {source.GetType().Name} to {typeof(TDestination).Name} has not been configured.");
            }
        }
    }
}
