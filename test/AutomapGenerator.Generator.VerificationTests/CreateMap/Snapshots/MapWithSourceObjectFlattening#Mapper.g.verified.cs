//HintName: Mapper.g.cs
// <auto-generated/>
namespace AutomapGenerator
{
    [global::System.CodeDom.Compiler.GeneratedCode("AutomapGenerator.SourceGenerator.MapperGenerator", "1.0.0.0")]
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public class Mapper : IMapper
    {
        public TDestination Map<TDestination>(object source)
            where TDestination : new() => Map<TDestination>(source, new TDestination());
        public TDestination Map<TDestination>(object source, TDestination destination)
        {
            switch (source, destination)
            {
                case (AutomapGenerator.Generator.VerificationTests.CreateMap.Sources.SourceObjWithNesting s, AutomapGenerator.Generator.VerificationTests.CreateMap.Sources.DestinationFromNestedSrc d):
                    d.Id = s.Id;
                    d.ChildObjDescription = s.ChildObj?.Description;
                    d.ChildObjOtherProp = s.ChildObj?.OtherProp;
                    d.SourceObjWithNestingChildObjDescription = s.ChildObj?.Description;
                    d.ChildObjNestedSourceOtherProp = s.ChildObj?.OtherProp;
                    d.NestedSourceDescription = s.NestedSource?.Description;
                    break;
                default:
                    throw new MappingException($"Mapping from {source.GetType().Name} to {typeof(TDestination).Name} has not been configured.");
            }

            return destination;
        }

        public global::System.Linq.IQueryable<TDestination> ProjectTo<TDestination>(global::System.Linq.IQueryable<object> source)
            where TDestination : new()
        {
            var destInstance = new TDestination();
            switch (source, destInstance)
            {
                case (global::System.Linq.IQueryable<AutomapGenerator.Generator.VerificationTests.CreateMap.Sources.SourceObjWithNesting> s, AutomapGenerator.Generator.VerificationTests.CreateMap.Sources.DestinationFromNestedSrc):
                    return global::System.Linq.Queryable.Cast<TDestination>(global::System.Linq.Queryable.Select(s, src => new AutomapGenerator.Generator.VerificationTests.CreateMap.Sources.DestinationFromNestedSrc()
                    {Id = src.Id, ChildObjDescription = src.ChildObj != null ? src.ChildObj.Description : null, ChildObjOtherProp = src.ChildObj != null ? src.ChildObj.OtherProp : null, SourceObjWithNestingChildObjDescription = src.ChildObj != null ? src.ChildObj.Description : null, ChildObjNestedSourceOtherProp = src.ChildObj != null ? src.ChildObj.OtherProp : null, NestedSourceDescription = src.NestedSource != null ? src.NestedSource.Description : null}));
                default:
                    throw new MappingException($"Mapping from {source.GetType().Name} to {typeof(TDestination).Name} has not been configured.");
            }
        }
    }
}
